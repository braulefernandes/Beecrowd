(let [dia-inicio (Integer/parseInt (second (clojure.string/split (read-line) #"\s+")))
      [h-inicio m-inicio s-inicio] (map #(Integer/parseInt %) (clojure.string/split (read-line) #"\s*:\s*"))
      dia-fim (Integer/parseInt (second (clojure.string/split (read-line) #"\s+")))
      [h-fim m-fim s-fim] (map #(Integer/parseInt %) (clojure.string/split (read-line) #"\s*:\s*"))
      segundos-inicio (+ (* dia-inicio 86400) (* h-inicio 3600) (* m-inicio 60) s-inicio)
      segundos-fim (+ (* dia-fim 86400) (* h-fim 3600) (* m-fim 60) s-fim)
      duracao-total (- segundos-fim segundos-inicio)
      dias (quot duracao-total 86400)
      duracao-restante (mod duracao-total 86400)
      horas (quot duracao-restante 3600)
      duracao-restante (mod duracao-restante 3600)
      minutos (quot duracao-restante 60)
      segundos (mod duracao-restante 60)]
  (println (format "%d dia(s)" dias))
  (println (format "%d hora(s)" horas))
  (println (format "%d minuto(s)" minutos))
  (println (format "%d segundo(s)" segundos)))